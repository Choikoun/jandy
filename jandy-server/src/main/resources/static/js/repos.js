// Generated by CoffeeScript 1.8.0
(function() {
  this.ReposGraph = (function() {
    function ReposGraph(options) {
      this.margin = options.margin;
      this.width = options.width - this.margin.left - this.margin.right;
      this.height = options.height - this.margin.top - this.margin.bottom;
      this.$builds = options.el.builds;
      this.$methods = options.el.methods;
    }

    ReposGraph.prototype.createBuilds = function(branchId) {
      var svg, x, xAxis, y, yAxis;
      x = d3.scale.ordinal().rangeRoundBands([0, this.width], .1);
      y = d3.scale.linear().range([this.height, 0]);
      xAxis = d3.svg.axis().scale(x).orient("bottom");
      yAxis = d3.svg.axis().scale(y).orient("left").ticks(20).tickFormat(function(d) {
        return d + "ms";
      });
      svg = d3.select(this.$builds).attr("width", this.width + this.margin.left + this.margin.right).attr("height", this.height + this.margin.top + this.margin.bottom).append("g").attr("transform", "translate(" + this.margin.left + "," + this.margin.top + ")");
      return d3.json(ROOT_URL + '/rest/branches/' + branchId + '/builds', (function(_this) {
        return function(error, data) {
          if (error) {
            throw error;
          }
          console.debug(data);
          x.domain(_.map(data, function(d) {
            return d.number;
          }));
          y.domain([
            0, d3.max(data, function(d) {
              return d.javaProfilingDump.maxTotalDuration;
            })
          ]);
          svg.append("g").attr("class", "x axis").attr("transform", "translate(0," + _this.height + ")").call(xAxis);
          svg.append("g").attr("class", "y axis").call(yAxis).append("text").attr("transform", "rotate(-90)").attr("y", 6).attr("dy", ".71em").style("text-anchor", "end").text("Max Duration");
          return svg.selectAll(".bar").data(data).enter().append("rect").attr("class", "bar").attr("x", function(d) {
            return x(d.number);
          }).attr("width", x.rangeBand()).attr("y", function(d) {
            return y(d.javaProfilingDump.maxTotalDuration);
          }).attr("height", function(d) {
            return _this.height - y(d.javaProfilingDump.maxTotalDuration);
          }).on('click', function(d) {
            return _this.createMethods(d.id);
          });
        };
      })(this));
    };

    ReposGraph.prototype.createMethods = function(buildId) {
      var svg, x, xAxis, y, yAxis;
      x = d3.scale.linear().range([this.width, 0]);
      y = d3.scale.ordinal().rangeRoundBands([this.height, 0]);
      xAxis = d3.svg.axis().scale(x).orient('top');
      yAxis = d3.svg.axis().scale(y).orient('left');
      $(this.$methods).html('');
      svg = d3.select(this.$methods).attr('width', this.width + this.margin.left + this.margin.right).attr('height', this.height + this.margin.top + this.margin.bottom).append('g').attr('transform', 'translate(' + this.margin.left + ', ' + this.margin.top + ')');
      return d3.json(ROOT_URL + '/rest/builds/' + buildId + '/java/nodes', (function(_this) {
        return function(error, data) {
          x.domain([
            0, d3.max(data, function(d) {
              return d.duration;
            })
          ]);
          y.domain(_.map(data, function(d) {
            return d.javaMethod.methodName;
          }));
          svg.append('g').attr('class', 'x axis').attr('transform', 'translate(0, 0)').call(xAxis).attr('x', 6).attr('dx', '.71em').text('Duration');
          return svg.append('g').attr('class', 'y axis').call(yAxis).attr('tarnsform', 'rotate(-90)');
        };
      })(this));
    };

    return ReposGraph;

  })();

}).call(this);

//# sourceMappingURL=repos.js.map
